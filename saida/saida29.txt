1 PRE struct
1 IDE Pessoa
2 DEL {
3 PRE string
ERROR on line 3: Expecting [{, extends]. Got: 'string'
3 IDE nome
3 DEL ;
4 PRE int
4 IDE idade
4 DEL ;
5 PRE real
5 IDE salario
5 DEL ;
7 DEL }
9 PRE const
10 DEL {
11 PRE int
11 IDE x
11 REL =
11 NRO 1
11 DEL ;
12 PRE string
12 IDE s
12 REL =
12 CAD "teste"
12 DEL ;
13 PRE real
13 IDE z
13 REL =
13 NRO 5.3
13 DEL ;
15 DEL }
17 PRE var
18 DEL {
19 PRE int
19 IDE a
19 DEL ;
20 PRE int
20 IDE b
20 DEL ;
21 PRE int
21 IDE c
21 DEL ;
22 PRE int
22 IDE d
22 DEL ;
23 PRE int
23 IDE m
23 DEL [
23 DEL ]
ERROR on line 23: Expecting [-, NRO, NRO, CAD, (, IDE, global, local]. Got: ']'
ERROR on line 23: Expecting [,, =, ;, []. Got: ']'
23 DEL ;
24 PRE int
24 IDE n
24 DEL [
24 NRO 5
24 DEL ]
24 DEL [
24 NRO 5
24 DEL ;
25 PRE int
25 IDE w
25 DEL ;
26 IDE Pessoa
26 IDE p
26 DEL ;
27 DEL }
29 PRE function
29 PRE int
29 IDE Soma
29 PRE int
ERROR on line 29: Expecting [(]. Got: 'int'
29 IDE c
29 DEL ,
29 PRE int
29 IDE d
29 DEL )
30 DEL {
31 PRE var
32 DEL {
33 PRE int
33 IDE e
33 DEL ;
34 DEL }
35 IDE e
35 REL =
35 IDE c
35 ART +
35 IDE d
35 DEL ;
36 IDE m
36 DEL [
36 REL =
36 IDE e
36 DEL ;
37 PRE return
37 IDE e
37 DEL ;
38 DEL }
39 PRE procedure
39 PRE start
39 DEL (
39 DEL )
40 DEL {
41 IDE Soma
41 DEL (
41 IDE b
41 DEL ,
41 IDE a
41 DEL )
41 DEL ;
42 PRE if
42 DEL (
42 IDE a
42 REL >
42 IDE c
42 DEL )
43 DEL {
ERROR on line 43: Expecting [then]. Got: '{'
ERROR on line 43: Expecting [}]. Got: '{'
44 PRE print
44 DEL (
44 CAD "Oi mundo!"
44 DEL )
44 DEL ;
45 PRE read
45 IDE w
45 DEL )
45 DEL ;
46 PRE read
46 DEL (
46 IDE p
46 DEL .
46 IDE idade
46 DEL )
46 DEL ;
47 PRE print
47 DEL (
47 IDE w
47 ART +
47 NRO 8.5
47 DEL ;
48 DEL }
49 PRE else
50 DEL {
51 PRE while
51 DEL (
51 IDE a
51 REL >
51 NRO 7
51 DEL )
52 DEL {
53 IDE w
53 REL =
53 NRO 5.4
53 DEL ;
54 DEL }
55 DEL }
56 PRE if
56 DEL (
56 IDE a
56 REL >
56 IDE b
56 DEL )
58 IDE a
58 REL =
58 IDE b
58 DEL ;
59 DEL }
60 PRE if
60 DEL (
60 DEL (
60 PRE true
60 REL ==
60 IDE x
60 DEL )
60 DEL (
60 PRE false
60 REL ==
60 IDE y
60 DEL )
60 DEL )
61 DEL {
62 IDE a
62 REL =
62 IDE b
62 DEL ;
63 DEL }
64 PRE if
64 DEL (
64 DEL (
64 IDE a
64 REL <
64 DEL (
64 REL <
64 IDE w
64 DEL )
64 DEL )
65 DEL {
66 IDE a
66 REL =
66 DEL ;
67 DEL }
68 DEL }
